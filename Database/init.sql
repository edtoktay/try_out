DROP 
  TABLE IF EXISTS RAW_TAG_READ CASCADE;
DROP 
  TABLE IF EXISTS TAGS CASCADE;
DROP 
  TABLE IF EXISTS BATCHES CASCADE;
DROP 
  TABLE IF EXISTS RAW_INTERPOLATED CASCADE;
DROP 
  TABLE IF EXISTS PROCESSED_BASE_BOXES CASCADE;
DROP 
  TABLE IF EXISTS ALARM_CONFIGURATION CASCADE;
DROP 
  TABLE IF EXISTS ALARMS CASCADE;
DROP 
  TABLE IF EXISTS RAW_INTERPOLATED_TAGS CASCADE;
DROP 
  TABLE IF EXISTS RAW_INTERPOLATED_BATCHES CASCADE;
DROP 
  TABLE IF EXISTS PROCESSED_BASE_BOXES_TAGS CASCADE;
DROP 
  TABLE IF EXISTS PROCESSED_BASE_BOXES_BATCHES CASCADE;
DROP 
  TABLE IF EXISTS ALARM_CONFIGURATION_TAGS CASCADE;
DROP 
  TABLE IF EXISTS ALARM_CONFIGURATION_BATCHES CASCADE;
DROP 
  TABLE IF EXISTS ALARMS_TAGS CASCADE;
DROP 
  TABLE IF EXISTS ALARMS_BATCHES CASCADE;
DROP 
  TABLE IF EXISTS ALARMS_CONFIGURATION CASCADE;
CREATE TABLE IF NOT EXISTS RAW_TAG_READ (
  ID SERIAL PRIMARY KEY, 
  BATCH_ID VARCHAR(20), 
  PRODUCT_ID VARCHAR(255), 
  TAG_ID VARCHAR(255), 
  "TIMESTAMP" TIMESTAMP, 
  "VALUE" INT, 
  "STATUS" VARCHAR(20) DEFAULT 'NEW'
);
CREATE TABLE IF NOT EXISTS TAGS (
  ID SERIAL PRIMARY KEY, 
  TAG_NAME VARCHAR(255), 
  PROCESSES BOOLEAN DEFAULT FALSE
);
INSERT INTO TAGS(TAG_NAME, PROCESSES) 
VALUES 
  (
    '2570/Ma_B.SLV.Counter.Counter0200', 
    TRUE
  );
INSERT INTO TAGS(TAG_NAME, PROCESSES) 
VALUES 
  (
    '2570/Ma_B.SLV.Counter.Counter0202', 
    TRUE
  );
CREATE TABLE IF NOT EXISTS TAG_CONFIGURATIONS (
  ID SERIAL PRIMARY KEY, MASTER_TAG_ID INT, 
  ERROR_TAG_ID INT
);
ALTER TABLE 
  TAG_CONFIGURATIONS 
ADD 
  CONSTRAINT FK_TAG_CONFIGURATIONS_MASTER_TAG FOREIGN KEY (MASTER_TAG_ID) REFERENCES TAGS(ID);
ALTER TABLE 
  TAG_CONFIGURATIONS 
ADD 
  CONSTRAINT FK_TAG_CONFIGURATIONS_ERROR_TAG FOREIGN KEY (ERROR_TAG_ID) REFERENCES TAGS(ID);
INSERT INTO TAG_CONFIGURATIONS(MASTER_TAG_ID, ERROR_TAG_ID) 
VALUES 
  (
    (
      SELECT 
        ID 
      FROM 
        TAGS 
      WHERE 
        TAG_NAME = '2570/Ma_B.SLV.Counter.Counter0200'
    ), 
    (
      SELECT 
        ID 
      FROM 
        TAGS 
      WHERE 
        TAG_NAME = '2570/Ma_B.SLV.Counter.Counter0202'
    )
  );
CREATE TABLE IF NOT EXISTS BATCHES(
  ID SERIAL PRIMARY KEY, 
  BATCH_ID VARCHAR(20), 
  PRODUCT_ID VARCHAR(255), 
  START_TIME TIMESTAMP, 
  END_TIME TIMESTAMP, 
  "PARTITION" INT DEFAULT 1
);
CREATE TABLE IF NOT EXISTS RAW_INTERPOLATED (
  ID SERIAL PRIMARY KEY, 
  "TIMESTAMP" TIMESTAMP, 
  "VALUE" INT, 
  "TYPE" VARCHAR(15)
);
CREATE TABLE IF NOT EXISTS RAW_INTERPOLATED_TAGS(
  RAW_READ_ID INT NOT NULL, TAG_ID INT NOT NULL
);
ALTER TABLE 
  RAW_INTERPOLATED_TAGS 
ADD 
  CONSTRAINT FK_RAW_INTERPOLATED_TAGS_RAW FOREIGN KEY (RAW_READ_ID) REFERENCES RAW_INTERPOLATED(ID);
ALTER TABLE 
  RAW_INTERPOLATED_TAGS 
ADD 
  CONSTRAINT FK_RAW_INTERPOLATED_TAGS_TAG FOREIGN KEY (TAG_ID) REFERENCES TAGS(ID);
CREATE TABLE IF NOT EXISTS RAW_INTERPOLATED_BATCHES(
  RAW_READ_ID INT NOT NULL, BATCH_ID INT NOT NULL
);
ALTER TABLE 
  RAW_INTERPOLATED_BATCHES 
ADD 
  CONSTRAINT FK_RAW_INTERPOLATED_BATCHES_RAW FOREIGN KEY (RAW_READ_ID) REFERENCES RAW_INTERPOLATED(ID);
ALTER TABLE 
  RAW_INTERPOLATED_BATCHES 
ADD 
  CONSTRAINT FK_RAW_INTERPOLATED_BATCHES_TAG FOREIGN KEY (BATCH_ID) REFERENCES BATCHES(ID);
CREATE TABLE IF NOT EXISTS PROCESSED_BASE_BOXES(
  ID SERIAL PRIMARY KEY, START_TIME TIMESTAMP, 
  END_TIME TIMESTAMP, TOTAL_START INT, 
  TOTAL_END INT, ERROR_START INT, ERROR_END INT, 
  "SIZE" INT, ERRORS INT, ERROR_RATE REAL
);
CREATE TABLE IF NOT EXISTS PROCESSED_BASE_BOXES_TAGS(
  PROCESSED_ID INT NOT NULL, TAG_ID INT NOT NULL
);
ALTER TABLE 
  PROCESSED_BASE_BOXES_TAGS 
ADD 
  CONSTRAINT FK_PROCESSED_BASE_BOXES_TAGS_RAW FOREIGN KEY (PROCESSED_ID) REFERENCES PROCESSED_BASE_BOXES(ID);
ALTER TABLE 
  PROCESSED_BASE_BOXES_TAGS 
ADD 
  CONSTRAINT FK_PROCESSED_BASE_BOXES_TAGS_TAG FOREIGN KEY (TAG_ID) REFERENCES TAGS(ID);
CREATE TABLE IF NOT EXISTS PROCESSED_BASE_BOXES_BATCHES(
  PROCESSED_ID INT NOT NULL, BATCH_ID INT NOT NULL
);
ALTER TABLE 
  PROCESSED_BASE_BOXES_BATCHES 
ADD 
  CONSTRAINT FK_PROCESSED_BASE_BOXES_BATCHES_RAW FOREIGN KEY (PROCESSED_ID) REFERENCES PROCESSED_BASE_BOXES(ID);
ALTER TABLE 
  PROCESSED_BASE_BOXES_BATCHES 
ADD 
  CONSTRAINT FK_PROCESSED_BASE_BOXES_BATCHES_TAG FOREIGN KEY (BATCH_ID) REFERENCES BATCHES(ID);
CREATE TABLE IF NOT EXISTS ALARM_CONFIGURATION(
  ID SERIAL PRIMARY KEY, BOX_SIZE INT, 
  ALARM_THRESHOLD REAL, IS_ACTIVE BOOLEAN
);
CREATE TABLE IF NOT EXISTS ALARM_CONFIGURATION_TAGS(
  ALARM_CONFIGURATION_ID INT NOT NULL, 
  TAG_ID INT NOT NULL
);
ALTER TABLE 
  ALARM_CONFIGURATION_TAGS 
ADD 
  CONSTRAINT FK_ALARM_CONFIGURATION_TAGS_RAW FOREIGN KEY (ALARM_CONFIGURATION_ID) REFERENCES ALARM_CONFIGURATION(ID);
ALTER TABLE 
  ALARM_CONFIGURATION_TAGS 
ADD 
  CONSTRAINT FK_ALARM_CONFIGURATION_TAGS_TAG FOREIGN KEY (TAG_ID) REFERENCES TAGS(ID);
CREATE TABLE IF NOT EXISTS ALARM_CONFIGURATION_BATCHES(
  ALARM_CONFIGURATION_ID INT NOT NULL, 
  BATCH_ID INT NOT NULL
);
ALTER TABLE 
  ALARM_CONFIGURATION_BATCHES 
ADD 
  CONSTRAINT FK_ALARM_CONFIGURATION_BATCHES_RAW FOREIGN KEY (ALARM_CONFIGURATION_ID) REFERENCES ALARM_CONFIGURATION(ID);
ALTER TABLE 
  ALARM_CONFIGURATION_BATCHES 
ADD 
  CONSTRAINT FK_ALARM_CONFIGURATION_BATCHES_BATCH FOREIGN KEY (BATCH_ID) REFERENCES BATCHES(ID);
CREATE TABLE IF NOT EXISTS ALARMS(
  ID SERIAL PRIMARY KEY, ALARM_TIME TIMESTAMP, 
  CURRENT_ERROR_RATE REAL, NOTIFICATION_SENT BOOLEAN
);
CREATE TABLE IF NOT EXISTS ALARMS_TAGS(
  ALARMS_ID INT NOT NULL, TAG_ID INT NOT NULL
);
ALTER TABLE 
  ALARMS_TAGS 
ADD 
  CONSTRAINT FK_ALARMS_TAGS_RAW FOREIGN KEY (ALARMS_ID) REFERENCES ALARMS(ID);
ALTER TABLE 
  ALARMS_TAGS 
ADD 
  CONSTRAINT FK_ALARMS_TAGS_TAG FOREIGN KEY (TAG_ID) REFERENCES TAGS(ID);
CREATE TABLE IF NOT EXISTS ALARMS_BATCHES(
  ALARMS_ID INT NOT NULL, BATCH_ID INT NOT NULL
);
ALTER TABLE 
  ALARMS_BATCHES 
ADD 
  CONSTRAINT FK_ALARMS_BATCHES_RAW FOREIGN KEY (ALARMS_ID) REFERENCES ALARMS(ID);
ALTER TABLE 
  ALARMS_BATCHES 
ADD 
  CONSTRAINT FK_ALARMS_BATCHES_TAG FOREIGN KEY (BATCH_ID) REFERENCES BATCHES(ID);
CREATE TABLE IF NOT EXISTS ALARMS_CONFIGURATION(
  ALARMS_ID INT NOT NULL, ALARM_CONFIG_ID INT NOT NULL
);
ALTER TABLE 
  ALARMS_CONFIGURATION 
ADD 
  CONSTRAINT FK_ALARMS_CONFIGURATION_RAW FOREIGN KEY (ALARMS_ID) REFERENCES ALARMS(ID);
ALTER TABLE 
  ALARMS_CONFIGURATION 
ADD 
  CONSTRAINT FK_ALARMS_CONFIGURATION_TAG FOREIGN KEY (ALARM_CONFIG_ID) REFERENCES ALARM_CONFIGURATION(ID);
